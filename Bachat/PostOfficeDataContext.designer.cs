#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bachat
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PostOfficeAccountManagement")]
	public partial class PostOfficeDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgentProfile(AgentProfile instance);
    partial void UpdateAgentProfile(AgentProfile instance);
    partial void DeleteAgentProfile(AgentProfile instance);
    partial void InsertScheme(Scheme instance);
    partial void UpdateScheme(Scheme instance);
    partial void DeleteScheme(Scheme instance);
    partial void InsertNKMDepositer(NKMDepositer instance);
    partial void UpdateNKMDepositer(NKMDepositer instance);
    partial void DeleteNKMDepositer(NKMDepositer instance);
    partial void InsertNKMTDSRegister(NKMTDSRegister instance);
    partial void UpdateNKMTDSRegister(NKMTDSRegister instance);
    partial void DeleteNKMTDSRegister(NKMTDSRegister instance);
    partial void InsertPostOffice(PostOffice instance);
    partial void UpdatePostOffice(PostOffice instance);
    partial void DeletePostOffice(PostOffice instance);
    partial void InsertRDRegister(RDRegister instance);
    partial void UpdateRDRegister(RDRegister instance);
    partial void DeleteRDRegister(RDRegister instance);
    partial void InsertRDTDSRegister(RDTDSRegister instance);
    partial void UpdateRDTDSRegister(RDTDSRegister instance);
    partial void DeleteRDTDSRegister(RDTDSRegister instance);
    partial void InsertRebetRDEntryDue(RebetRDEntryDue instance);
    partial void UpdateRebetRDEntryDue(RebetRDEntryDue instance);
    partial void DeleteRebetRDEntryDue(RebetRDEntryDue instance);
    partial void InsertRecurringDepositCustomer(RecurringDepositCustomer instance);
    partial void UpdateRecurringDepositCustomer(RecurringDepositCustomer instance);
    partial void DeleteRecurringDepositCustomer(RecurringDepositCustomer instance);
    partial void InsertSchemeRegister(SchemeRegister instance);
    partial void UpdateSchemeRegister(SchemeRegister instance);
    partial void DeleteSchemeRegister(SchemeRegister instance);
    #endregion
		
		public PostOfficeDataContextDataContext() : 
				base(global::Bachat.Properties.Settings.Default.PostOfficeAccountManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PostOfficeDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PostOfficeDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PostOfficeDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PostOfficeDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AgentProfile> AgentProfiles
		{
			get
			{
				return this.GetTable<AgentProfile>();
			}
		}
		
		public System.Data.Linq.Table<Scheme> Schemes
		{
			get
			{
				return this.GetTable<Scheme>();
			}
		}
		
		public System.Data.Linq.Table<NKMDepositer> NKMDepositers
		{
			get
			{
				return this.GetTable<NKMDepositer>();
			}
		}
		
		public System.Data.Linq.Table<NKMTDSRegister> NKMTDSRegisters
		{
			get
			{
				return this.GetTable<NKMTDSRegister>();
			}
		}
		
		public System.Data.Linq.Table<PostOffice> PostOffices
		{
			get
			{
				return this.GetTable<PostOffice>();
			}
		}
		
		public System.Data.Linq.Table<RDRegister> RDRegisters
		{
			get
			{
				return this.GetTable<RDRegister>();
			}
		}
		
		public System.Data.Linq.Table<RDTDSRegister> RDTDSRegisters
		{
			get
			{
				return this.GetTable<RDTDSRegister>();
			}
		}
		
		public System.Data.Linq.Table<RebetRDEntryDue> RebetRDEntryDues
		{
			get
			{
				return this.GetTable<RebetRDEntryDue>();
			}
		}
		
		public System.Data.Linq.Table<RecurringDepositCustomer> RecurringDepositCustomers
		{
			get
			{
				return this.GetTable<RecurringDepositCustomer>();
			}
		}
		
		public System.Data.Linq.Table<SchemeRegister> SchemeRegisters
		{
			get
			{
				return this.GetTable<SchemeRegister>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgentProfile")]
	public partial class AgentProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private string _AgentName;
		
		private string _Address;
		
		private string _AuthorityNo;
		
		private double _TDS;
		
		private double _Sur;
		
		private double _Commission;
		
		private System.DateTime _IssueDate;
		
		private System.DateTime _ValidUpto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAgentNameChanging(string value);
    partial void OnAgentNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAuthorityNoChanging(string value);
    partial void OnAuthorityNoChanged();
    partial void OnTDSChanging(double value);
    partial void OnTDSChanged();
    partial void OnSurChanging(double value);
    partial void OnSurChanged();
    partial void OnCommissionChanging(double value);
    partial void OnCommissionChanged();
    partial void OnIssueDateChanging(System.DateTime value);
    partial void OnIssueDateChanged();
    partial void OnValidUptoChanging(System.DateTime value);
    partial void OnValidUptoChanged();
    #endregion
		
		public AgentProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AgentName
		{
			get
			{
				return this._AgentName;
			}
			set
			{
				if ((this._AgentName != value))
				{
					this.OnAgentNameChanging(value);
					this.SendPropertyChanging();
					this._AgentName = value;
					this.SendPropertyChanged("AgentName");
					this.OnAgentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AuthorityNo
		{
			get
			{
				return this._AuthorityNo;
			}
			set
			{
				if ((this._AuthorityNo != value))
				{
					this.OnAuthorityNoChanging(value);
					this.SendPropertyChanging();
					this._AuthorityNo = value;
					this.SendPropertyChanged("AuthorityNo");
					this.OnAuthorityNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDS", DbType="Float NOT NULL")]
		public double TDS
		{
			get
			{
				return this._TDS;
			}
			set
			{
				if ((this._TDS != value))
				{
					this.OnTDSChanging(value);
					this.SendPropertyChanging();
					this._TDS = value;
					this.SendPropertyChanged("TDS");
					this.OnTDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sur", DbType="Float NOT NULL")]
		public double Sur
		{
			get
			{
				return this._Sur;
			}
			set
			{
				if ((this._Sur != value))
				{
					this.OnSurChanging(value);
					this.SendPropertyChanging();
					this._Sur = value;
					this.SendPropertyChanged("Sur");
					this.OnSurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commission", DbType="Float NOT NULL")]
		public double Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime NOT NULL")]
		public System.DateTime IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidUpto", DbType="DateTime NOT NULL")]
		public System.DateTime ValidUpto
		{
			get
			{
				return this._ValidUpto;
			}
			set
			{
				if ((this._ValidUpto != value))
				{
					this.OnValidUptoChanging(value);
					this.SendPropertyChanging();
					this._ValidUpto = value;
					this.SendPropertyChanged("ValidUpto");
					this.OnValidUptoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schemes")]
	public partial class Scheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SchemeNo;
		
		private string _TypeOfInvestment;
		
		private EntitySet<NKMDepositer> _NKMDepositers;
		
		private EntitySet<SchemeRegister> _SchemeRegisters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchemeNoChanging(int value);
    partial void OnSchemeNoChanged();
    partial void OnTypeOfInvestmentChanging(string value);
    partial void OnTypeOfInvestmentChanged();
    #endregion
		
		public Scheme()
		{
			this._NKMDepositers = new EntitySet<NKMDepositer>(new Action<NKMDepositer>(this.attach_NKMDepositers), new Action<NKMDepositer>(this.detach_NKMDepositers));
			this._SchemeRegisters = new EntitySet<SchemeRegister>(new Action<SchemeRegister>(this.attach_SchemeRegisters), new Action<SchemeRegister>(this.detach_SchemeRegisters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemeNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SchemeNo
		{
			get
			{
				return this._SchemeNo;
			}
			set
			{
				if ((this._SchemeNo != value))
				{
					this.OnSchemeNoChanging(value);
					this.SendPropertyChanging();
					this._SchemeNo = value;
					this.SendPropertyChanged("SchemeNo");
					this.OnSchemeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfInvestment", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TypeOfInvestment
		{
			get
			{
				return this._TypeOfInvestment;
			}
			set
			{
				if ((this._TypeOfInvestment != value))
				{
					this.OnTypeOfInvestmentChanging(value);
					this.SendPropertyChanging();
					this._TypeOfInvestment = value;
					this.SendPropertyChanged("TypeOfInvestment");
					this.OnTypeOfInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheme_NKMDepositer", Storage="_NKMDepositers", ThisKey="SchemeNo", OtherKey="TypeOfInvestment")]
		public EntitySet<NKMDepositer> NKMDepositers
		{
			get
			{
				return this._NKMDepositers;
			}
			set
			{
				this._NKMDepositers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheme_SchemeRegister", Storage="_SchemeRegisters", ThisKey="SchemeNo", OtherKey="TypeOfInvestment")]
		public EntitySet<SchemeRegister> SchemeRegisters
		{
			get
			{
				return this._SchemeRegisters;
			}
			set
			{
				this._SchemeRegisters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NKMDepositers(NKMDepositer entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = this;
		}
		
		private void detach_NKMDepositers(NKMDepositer entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = null;
		}
		
		private void attach_SchemeRegisters(SchemeRegister entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = this;
		}
		
		private void detach_SchemeRegisters(SchemeRegister entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NKMDepositers")]
	public partial class NKMDepositer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepositerNo;
		
		private int _TypeOfInvestment;
		
		private string _DepositerName;
		
		private string _SecondName;
		
		private string _FamilyCode;
		
		private string _Nomination;
		
		private string _Address;
		
		private string _City;
		
		private string _Amount;
		
		private string _CertificateNo;
		
		private string _RegistrationNo;
		
		private System.DateTime _DateOfDeposit;
		
		private int _PostOffice;
		
		private System.DateTime _MaturityDate;
		
		private string _MaturityAmount;
		
		private EntityRef<NKMTDSRegister> _NKMTDSRegister;
		
		private EntityRef<Scheme> _Scheme;
		
		private EntityRef<PostOffice> _PostOffice1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepositerNoChanging(string value);
    partial void OnDepositerNoChanged();
    partial void OnTypeOfInvestmentChanging(int value);
    partial void OnTypeOfInvestmentChanged();
    partial void OnDepositerNameChanging(string value);
    partial void OnDepositerNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnFamilyCodeChanging(string value);
    partial void OnFamilyCodeChanged();
    partial void OnNominationChanging(string value);
    partial void OnNominationChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnRegistrationNoChanging(string value);
    partial void OnRegistrationNoChanged();
    partial void OnDateOfDepositChanging(System.DateTime value);
    partial void OnDateOfDepositChanged();
    partial void OnPostOfficeChanging(int value);
    partial void OnPostOfficeChanged();
    partial void OnMaturityDateChanging(System.DateTime value);
    partial void OnMaturityDateChanged();
    partial void OnMaturityAmountChanging(string value);
    partial void OnMaturityAmountChanged();
    #endregion
		
		public NKMDepositer()
		{
			this._NKMTDSRegister = default(EntityRef<NKMTDSRegister>);
			this._Scheme = default(EntityRef<Scheme>);
			this._PostOffice1 = default(EntityRef<PostOffice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositerNo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepositerNo
		{
			get
			{
				return this._DepositerNo;
			}
			set
			{
				if ((this._DepositerNo != value))
				{
					this.OnDepositerNoChanging(value);
					this.SendPropertyChanging();
					this._DepositerNo = value;
					this.SendPropertyChanged("DepositerNo");
					this.OnDepositerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfInvestment", DbType="Int NOT NULL")]
		public int TypeOfInvestment
		{
			get
			{
				return this._TypeOfInvestment;
			}
			set
			{
				if ((this._TypeOfInvestment != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeOfInvestmentChanging(value);
					this.SendPropertyChanging();
					this._TypeOfInvestment = value;
					this.SendPropertyChanged("TypeOfInvestment");
					this.OnTypeOfInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DepositerName
		{
			get
			{
				return this._DepositerName;
			}
			set
			{
				if ((this._DepositerName != value))
				{
					this.OnDepositerNameChanging(value);
					this.SendPropertyChanging();
					this._DepositerName = value;
					this.SendPropertyChanged("DepositerName");
					this.OnDepositerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(100)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyCode", DbType="VarChar(10)")]
		public string FamilyCode
		{
			get
			{
				return this._FamilyCode;
			}
			set
			{
				if ((this._FamilyCode != value))
				{
					this.OnFamilyCodeChanging(value);
					this.SendPropertyChanging();
					this._FamilyCode = value;
					this.SendPropertyChanged("FamilyCode");
					this.OnFamilyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nomination", DbType="VarChar(100)")]
		public string Nomination
		{
			get
			{
				return this._Nomination;
			}
			set
			{
				if ((this._Nomination != value))
				{
					this.OnNominationChanging(value);
					this.SendPropertyChanging();
					this._Nomination = value;
					this.SendPropertyChanged("Nomination");
					this.OnNominationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="VarChar(30)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNo", DbType="VarChar(10)")]
		public string RegistrationNo
		{
			get
			{
				return this._RegistrationNo;
			}
			set
			{
				if ((this._RegistrationNo != value))
				{
					this.OnRegistrationNoChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNo = value;
					this.SendPropertyChanged("RegistrationNo");
					this.OnRegistrationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfDeposit", DbType="Date NOT NULL")]
		public System.DateTime DateOfDeposit
		{
			get
			{
				return this._DateOfDeposit;
			}
			set
			{
				if ((this._DateOfDeposit != value))
				{
					this.OnDateOfDepositChanging(value);
					this.SendPropertyChanging();
					this._DateOfDeposit = value;
					this.SendPropertyChanged("DateOfDeposit");
					this.OnDateOfDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostOffice", DbType="Int NOT NULL")]
		public int PostOffice
		{
			get
			{
				return this._PostOffice;
			}
			set
			{
				if ((this._PostOffice != value))
				{
					if (this._PostOffice1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostOfficeChanging(value);
					this.SendPropertyChanging();
					this._PostOffice = value;
					this.SendPropertyChanged("PostOffice");
					this.OnPostOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date NOT NULL")]
		public System.DateTime MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityAmount", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaturityAmount
		{
			get
			{
				return this._MaturityAmount;
			}
			set
			{
				if ((this._MaturityAmount != value))
				{
					this.OnMaturityAmountChanging(value);
					this.SendPropertyChanging();
					this._MaturityAmount = value;
					this.SendPropertyChanged("MaturityAmount");
					this.OnMaturityAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NKMDepositer_NKMTDSRegister", Storage="_NKMTDSRegister", ThisKey="DepositerNo", OtherKey="DepositerNo", IsUnique=true, IsForeignKey=false)]
		public NKMTDSRegister NKMTDSRegister
		{
			get
			{
				return this._NKMTDSRegister.Entity;
			}
			set
			{
				NKMTDSRegister previousValue = this._NKMTDSRegister.Entity;
				if (((previousValue != value) 
							|| (this._NKMTDSRegister.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NKMTDSRegister.Entity = null;
						previousValue.NKMDepositer = null;
					}
					this._NKMTDSRegister.Entity = value;
					if ((value != null))
					{
						value.NKMDepositer = this;
					}
					this.SendPropertyChanged("NKMTDSRegister");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheme_NKMDepositer", Storage="_Scheme", ThisKey="TypeOfInvestment", OtherKey="SchemeNo", IsForeignKey=true)]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.NKMDepositers.Remove(this);
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.NKMDepositers.Add(this);
						this._TypeOfInvestment = value.SchemeNo;
					}
					else
					{
						this._TypeOfInvestment = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostOffice_NKMDepositer", Storage="_PostOffice1", ThisKey="PostOffice", OtherKey="ID", IsForeignKey=true)]
		public PostOffice PostOffice1
		{
			get
			{
				return this._PostOffice1.Entity;
			}
			set
			{
				PostOffice previousValue = this._PostOffice1.Entity;
				if (((previousValue != value) 
							|| (this._PostOffice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostOffice1.Entity = null;
						previousValue.NKMDepositers.Remove(this);
					}
					this._PostOffice1.Entity = value;
					if ((value != null))
					{
						value.NKMDepositers.Add(this);
						this._PostOffice = value.ID;
					}
					else
					{
						this._PostOffice = default(int);
					}
					this.SendPropertyChanged("PostOffice1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NKMTDSRegister")]
	public partial class NKMTDSRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepositerNo;
		
		private string _Type;
		
		private System.DateTime _IssueDate;
		
		private string _GrossAmount;
		
		private string _Commission;
		
		private double _TDS;
		
		private double _Sur;
		
		private double _Total;
		
		private double _NetCommission;
		
		private string _MonthYearValue;
		
		private EntityRef<NKMDepositer> _NKMDepositer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepositerNoChanging(string value);
    partial void OnDepositerNoChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIssueDateChanging(System.DateTime value);
    partial void OnIssueDateChanged();
    partial void OnGrossAmountChanging(string value);
    partial void OnGrossAmountChanged();
    partial void OnCommissionChanging(string value);
    partial void OnCommissionChanged();
    partial void OnTDSChanging(double value);
    partial void OnTDSChanged();
    partial void OnSurChanging(double value);
    partial void OnSurChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnNetCommissionChanging(double value);
    partial void OnNetCommissionChanged();
    partial void OnMonthYearValueChanging(string value);
    partial void OnMonthYearValueChanged();
    #endregion
		
		public NKMTDSRegister()
		{
			this._NKMDepositer = default(EntityRef<NKMDepositer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositerNo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepositerNo
		{
			get
			{
				return this._DepositerNo;
			}
			set
			{
				if ((this._DepositerNo != value))
				{
					if (this._NKMDepositer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepositerNoChanging(value);
					this.SendPropertyChanging();
					this._DepositerNo = value;
					this.SendPropertyChanged("DepositerNo");
					this.OnDepositerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="Date NOT NULL")]
		public System.DateTime IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossAmount", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string GrossAmount
		{
			get
			{
				return this._GrossAmount;
			}
			set
			{
				if ((this._GrossAmount != value))
				{
					this.OnGrossAmountChanging(value);
					this.SendPropertyChanging();
					this._GrossAmount = value;
					this.SendPropertyChanged("GrossAmount");
					this.OnGrossAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commission", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDS", DbType="Float NOT NULL")]
		public double TDS
		{
			get
			{
				return this._TDS;
			}
			set
			{
				if ((this._TDS != value))
				{
					this.OnTDSChanging(value);
					this.SendPropertyChanging();
					this._TDS = value;
					this.SendPropertyChanged("TDS");
					this.OnTDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sur", DbType="Float NOT NULL")]
		public double Sur
		{
			get
			{
				return this._Sur;
			}
			set
			{
				if ((this._Sur != value))
				{
					this.OnSurChanging(value);
					this.SendPropertyChanging();
					this._Sur = value;
					this.SendPropertyChanged("Sur");
					this.OnSurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
		public double Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetCommission", DbType="Float NOT NULL")]
		public double NetCommission
		{
			get
			{
				return this._NetCommission;
			}
			set
			{
				if ((this._NetCommission != value))
				{
					this.OnNetCommissionChanging(value);
					this.SendPropertyChanging();
					this._NetCommission = value;
					this.SendPropertyChanged("NetCommission");
					this.OnNetCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYearValue", DbType="VarChar(10)")]
		public string MonthYearValue
		{
			get
			{
				return this._MonthYearValue;
			}
			set
			{
				if ((this._MonthYearValue != value))
				{
					this.OnMonthYearValueChanging(value);
					this.SendPropertyChanging();
					this._MonthYearValue = value;
					this.SendPropertyChanged("MonthYearValue");
					this.OnMonthYearValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NKMDepositer_NKMTDSRegister", Storage="_NKMDepositer", ThisKey="DepositerNo", OtherKey="DepositerNo", IsForeignKey=true)]
		public NKMDepositer NKMDepositer
		{
			get
			{
				return this._NKMDepositer.Entity;
			}
			set
			{
				NKMDepositer previousValue = this._NKMDepositer.Entity;
				if (((previousValue != value) 
							|| (this._NKMDepositer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NKMDepositer.Entity = null;
						previousValue.NKMTDSRegister = null;
					}
					this._NKMDepositer.Entity = value;
					if ((value != null))
					{
						value.NKMTDSRegister = this;
						this._DepositerNo = value.DepositerNo;
					}
					else
					{
						this._DepositerNo = default(string);
					}
					this.SendPropertyChanged("NKMDepositer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostOffices")]
	public partial class PostOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PostOfficeName;
		
		private EntitySet<NKMDepositer> _NKMDepositers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPostOfficeNameChanging(string value);
    partial void OnPostOfficeNameChanged();
    #endregion
		
		public PostOffice()
		{
			this._NKMDepositers = new EntitySet<NKMDepositer>(new Action<NKMDepositer>(this.attach_NKMDepositers), new Action<NKMDepositer>(this.detach_NKMDepositers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostOfficeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PostOfficeName
		{
			get
			{
				return this._PostOfficeName;
			}
			set
			{
				if ((this._PostOfficeName != value))
				{
					this.OnPostOfficeNameChanging(value);
					this.SendPropertyChanging();
					this._PostOfficeName = value;
					this.SendPropertyChanged("PostOfficeName");
					this.OnPostOfficeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostOffice_NKMDepositer", Storage="_NKMDepositers", ThisKey="ID", OtherKey="PostOffice")]
		public EntitySet<NKMDepositer> NKMDepositers
		{
			get
			{
				return this._NKMDepositers;
			}
			set
			{
				this._NKMDepositers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NKMDepositers(NKMDepositer entity)
		{
			this.SendPropertyChanging();
			entity.PostOffice1 = this;
		}
		
		private void detach_NKMDepositers(NKMDepositer entity)
		{
			this.SendPropertyChanging();
			entity.PostOffice1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RDRegister")]
	public partial class RDRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _LotNo;
		
		private System.DateTime _Date;
		
		private string _RDAccountNo;
		
		private string _Name;
		
		private string _CardNo;
		
		private string _Amount;
		
		private System.Nullable<double> _Due;
		
		private System.Nullable<double> _Rebate;
		
		private long _Balance;
		
		private string _Remarks;
		
		private string _MonthYearValue;
		
		private EntityRef<RecurringDepositCustomer> _RecurringDepositCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLotNoChanging(int value);
    partial void OnLotNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRDAccountNoChanging(string value);
    partial void OnRDAccountNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnDueChanging(System.Nullable<double> value);
    partial void OnDueChanged();
    partial void OnRebateChanging(System.Nullable<double> value);
    partial void OnRebateChanged();
    partial void OnBalanceChanging(long value);
    partial void OnBalanceChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnMonthYearValueChanging(string value);
    partial void OnMonthYearValueChanged();
    #endregion
		
		public RDRegister()
		{
			this._RecurringDepositCustomer = default(EntityRef<RecurringDepositCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="Int NOT NULL")]
		public int LotNo
		{
			get
			{
				return this._LotNo;
			}
			set
			{
				if ((this._LotNo != value))
				{
					this.OnLotNoChanging(value);
					this.SendPropertyChanging();
					this._LotNo = value;
					this.SendPropertyChanged("LotNo");
					this.OnLotNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDAccountNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string RDAccountNo
		{
			get
			{
				return this._RDAccountNo;
			}
			set
			{
				if ((this._RDAccountNo != value))
				{
					if (this._RecurringDepositCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRDAccountNoChanging(value);
					this.SendPropertyChanging();
					this._RDAccountNo = value;
					this.SendPropertyChanged("RDAccountNo");
					this.OnRDAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due", DbType="Float")]
		public System.Nullable<double> Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this.OnDueChanging(value);
					this.SendPropertyChanging();
					this._Due = value;
					this.SendPropertyChanged("Due");
					this.OnDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rebate", DbType="Float")]
		public System.Nullable<double> Rebate
		{
			get
			{
				return this._Rebate;
			}
			set
			{
				if ((this._Rebate != value))
				{
					this.OnRebateChanging(value);
					this.SendPropertyChanging();
					this._Rebate = value;
					this.SendPropertyChanged("Rebate");
					this.OnRebateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="BigInt NOT NULL")]
		public long Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(15)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYearValue", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MonthYearValue
		{
			get
			{
				return this._MonthYearValue;
			}
			set
			{
				if ((this._MonthYearValue != value))
				{
					this.OnMonthYearValueChanging(value);
					this.SendPropertyChanging();
					this._MonthYearValue = value;
					this.SendPropertyChanged("MonthYearValue");
					this.OnMonthYearValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecurringDepositCustomer_RDRegister", Storage="_RecurringDepositCustomer", ThisKey="RDAccountNo", OtherKey="RDAccountNo", IsForeignKey=true)]
		public RecurringDepositCustomer RecurringDepositCustomer
		{
			get
			{
				return this._RecurringDepositCustomer.Entity;
			}
			set
			{
				RecurringDepositCustomer previousValue = this._RecurringDepositCustomer.Entity;
				if (((previousValue != value) 
							|| (this._RecurringDepositCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecurringDepositCustomer.Entity = null;
						previousValue.RDRegisters.Remove(this);
					}
					this._RecurringDepositCustomer.Entity = value;
					if ((value != null))
					{
						value.RDRegisters.Add(this);
						this._RDAccountNo = value.RDAccountNo;
					}
					else
					{
						this._RDAccountNo = default(string);
					}
					this.SendPropertyChanged("RecurringDepositCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RDTDSRegister")]
	public partial class RDTDSRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _LotNo;
		
		private string _Type;
		
		private System.DateTime _Date;
		
		private string _GrossAMT;
		
		private string _Commission;
		
		private double _TDS;
		
		private double _Sur;
		
		private double _Total;
		
		private double _NetCommission;
		
		private string _MonthYearValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLotNoChanging(int value);
    partial void OnLotNoChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnGrossAMTChanging(string value);
    partial void OnGrossAMTChanged();
    partial void OnCommissionChanging(string value);
    partial void OnCommissionChanged();
    partial void OnTDSChanging(double value);
    partial void OnTDSChanged();
    partial void OnSurChanging(double value);
    partial void OnSurChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnNetCommissionChanging(double value);
    partial void OnNetCommissionChanged();
    partial void OnMonthYearValueChanging(string value);
    partial void OnMonthYearValueChanged();
    #endregion
		
		public RDTDSRegister()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="Int NOT NULL")]
		public int LotNo
		{
			get
			{
				return this._LotNo;
			}
			set
			{
				if ((this._LotNo != value))
				{
					this.OnLotNoChanging(value);
					this.SendPropertyChanging();
					this._LotNo = value;
					this.SendPropertyChanged("LotNo");
					this.OnLotNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossAMT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string GrossAMT
		{
			get
			{
				return this._GrossAMT;
			}
			set
			{
				if ((this._GrossAMT != value))
				{
					this.OnGrossAMTChanging(value);
					this.SendPropertyChanging();
					this._GrossAMT = value;
					this.SendPropertyChanged("GrossAMT");
					this.OnGrossAMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commission", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this.OnCommissionChanging(value);
					this.SendPropertyChanging();
					this._Commission = value;
					this.SendPropertyChanged("Commission");
					this.OnCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDS", DbType="Float NOT NULL")]
		public double TDS
		{
			get
			{
				return this._TDS;
			}
			set
			{
				if ((this._TDS != value))
				{
					this.OnTDSChanging(value);
					this.SendPropertyChanging();
					this._TDS = value;
					this.SendPropertyChanged("TDS");
					this.OnTDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sur", DbType="Float NOT NULL")]
		public double Sur
		{
			get
			{
				return this._Sur;
			}
			set
			{
				if ((this._Sur != value))
				{
					this.OnSurChanging(value);
					this.SendPropertyChanging();
					this._Sur = value;
					this.SendPropertyChanged("Sur");
					this.OnSurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
		public double Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetCommission", DbType="Float NOT NULL")]
		public double NetCommission
		{
			get
			{
				return this._NetCommission;
			}
			set
			{
				if ((this._NetCommission != value))
				{
					this.OnNetCommissionChanging(value);
					this.SendPropertyChanging();
					this._NetCommission = value;
					this.SendPropertyChanged("NetCommission");
					this.OnNetCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYearValue", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MonthYearValue
		{
			get
			{
				return this._MonthYearValue;
			}
			set
			{
				if ((this._MonthYearValue != value))
				{
					this.OnMonthYearValueChanging(value);
					this.SendPropertyChanging();
					this._MonthYearValue = value;
					this.SendPropertyChanged("MonthYearValue");
					this.OnMonthYearValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RebetRDEntryDue")]
	public partial class RebetRDEntryDue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _RDAccountNo;
		
		private string _DepositerName;
		
		private System.DateTime _NextDueDate;
		
		private string _Amount;
		
		private string _Balance;
		
		private EntityRef<RecurringDepositCustomer> _RecurringDepositCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRDAccountNoChanging(string value);
    partial void OnRDAccountNoChanged();
    partial void OnDepositerNameChanging(string value);
    partial void OnDepositerNameChanged();
    partial void OnNextDueDateChanging(System.DateTime value);
    partial void OnNextDueDateChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnBalanceChanging(string value);
    partial void OnBalanceChanged();
    #endregion
		
		public RebetRDEntryDue()
		{
			this._RecurringDepositCustomer = default(EntityRef<RecurringDepositCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDAccountNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string RDAccountNo
		{
			get
			{
				return this._RDAccountNo;
			}
			set
			{
				if ((this._RDAccountNo != value))
				{
					if (this._RecurringDepositCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRDAccountNoChanging(value);
					this.SendPropertyChanging();
					this._RDAccountNo = value;
					this.SendPropertyChanged("RDAccountNo");
					this.OnRDAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepositerName
		{
			get
			{
				return this._DepositerName;
			}
			set
			{
				if ((this._DepositerName != value))
				{
					this.OnDepositerNameChanging(value);
					this.SendPropertyChanging();
					this._DepositerName = value;
					this.SendPropertyChanged("DepositerName");
					this.OnDepositerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDueDate", DbType="DateTime NOT NULL")]
		public System.DateTime NextDueDate
		{
			get
			{
				return this._NextDueDate;
			}
			set
			{
				if ((this._NextDueDate != value))
				{
					this.OnNextDueDateChanging(value);
					this.SendPropertyChanging();
					this._NextDueDate = value;
					this.SendPropertyChanged("NextDueDate");
					this.OnNextDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecurringDepositCustomer_RebetRDEntryDue", Storage="_RecurringDepositCustomer", ThisKey="RDAccountNo", OtherKey="RDAccountNo", IsForeignKey=true)]
		public RecurringDepositCustomer RecurringDepositCustomer
		{
			get
			{
				return this._RecurringDepositCustomer.Entity;
			}
			set
			{
				RecurringDepositCustomer previousValue = this._RecurringDepositCustomer.Entity;
				if (((previousValue != value) 
							|| (this._RecurringDepositCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecurringDepositCustomer.Entity = null;
						previousValue.RebetRDEntryDues.Remove(this);
					}
					this._RecurringDepositCustomer.Entity = value;
					if ((value != null))
					{
						value.RebetRDEntryDues.Add(this);
						this._RDAccountNo = value.RDAccountNo;
					}
					else
					{
						this._RDAccountNo = default(string);
					}
					this.SendPropertyChanged("RecurringDepositCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecurringDepositCustomer")]
	public partial class RecurringDepositCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RDAccountNo;
		
		private string _FamilyCode;
		
		private System.Nullable<System.DateTime> _DateOfOpening;
		
		private string _DepositerName;
		
		private string _SecondName;
		
		private string _NameOfNominee;
		
		private string _Address;
		
		private string _City;
		
		private string _Amount;
		
		private string _CardNo;
		
		private string _PhoneNo;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<bool> _ClosedAccount;
		
		private System.Nullable<System.DateTime> _ClosingDate;
		
		private string _Balance;
		
		private System.Nullable<System.DateTime> _LastCreditDate;
		
		private System.Nullable<System.DateTime> _NextDueDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private string _MaturityAmount;
		
		private EntitySet<RDRegister> _RDRegisters;
		
		private EntitySet<RebetRDEntryDue> _RebetRDEntryDues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRDAccountNoChanging(string value);
    partial void OnRDAccountNoChanged();
    partial void OnFamilyCodeChanging(string value);
    partial void OnFamilyCodeChanged();
    partial void OnDateOfOpeningChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfOpeningChanged();
    partial void OnDepositerNameChanging(string value);
    partial void OnDepositerNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnNameOfNomineeChanging(string value);
    partial void OnNameOfNomineeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnClosedAccountChanging(System.Nullable<bool> value);
    partial void OnClosedAccountChanged();
    partial void OnClosingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingDateChanged();
    partial void OnBalanceChanging(string value);
    partial void OnBalanceChanged();
    partial void OnLastCreditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCreditDateChanged();
    partial void OnNextDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextDueDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnMaturityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMaturityDateChanged();
    partial void OnMaturityAmountChanging(string value);
    partial void OnMaturityAmountChanged();
    #endregion
		
		public RecurringDepositCustomer()
		{
			this._RDRegisters = new EntitySet<RDRegister>(new Action<RDRegister>(this.attach_RDRegisters), new Action<RDRegister>(this.detach_RDRegisters));
			this._RebetRDEntryDues = new EntitySet<RebetRDEntryDue>(new Action<RebetRDEntryDue>(this.attach_RebetRDEntryDues), new Action<RebetRDEntryDue>(this.detach_RebetRDEntryDues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDAccountNo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RDAccountNo
		{
			get
			{
				return this._RDAccountNo;
			}
			set
			{
				if ((this._RDAccountNo != value))
				{
					this.OnRDAccountNoChanging(value);
					this.SendPropertyChanging();
					this._RDAccountNo = value;
					this.SendPropertyChanged("RDAccountNo");
					this.OnRDAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyCode", DbType="VarChar(10)")]
		public string FamilyCode
		{
			get
			{
				return this._FamilyCode;
			}
			set
			{
				if ((this._FamilyCode != value))
				{
					this.OnFamilyCodeChanging(value);
					this.SendPropertyChanging();
					this._FamilyCode = value;
					this.SendPropertyChanged("FamilyCode");
					this.OnFamilyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfOpening", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfOpening
		{
			get
			{
				return this._DateOfOpening;
			}
			set
			{
				if ((this._DateOfOpening != value))
				{
					this.OnDateOfOpeningChanging(value);
					this.SendPropertyChanging();
					this._DateOfOpening = value;
					this.SendPropertyChanged("DateOfOpening");
					this.OnDateOfOpeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositerName", DbType="VarChar(50)")]
		public string DepositerName
		{
			get
			{
				return this._DepositerName;
			}
			set
			{
				if ((this._DepositerName != value))
				{
					this.OnDepositerNameChanging(value);
					this.SendPropertyChanging();
					this._DepositerName = value;
					this.SendPropertyChanged("DepositerName");
					this.OnDepositerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(50)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfNominee", DbType="VarChar(50)")]
		public string NameOfNominee
		{
			get
			{
				return this._NameOfNominee;
			}
			set
			{
				if ((this._NameOfNominee != value))
				{
					this.OnNameOfNomineeChanging(value);
					this.SendPropertyChanging();
					this._NameOfNominee = value;
					this.SendPropertyChanged("NameOfNominee");
					this.OnNameOfNomineeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="VarChar(10)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(10)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedAccount", DbType="Bit")]
		public System.Nullable<bool> ClosedAccount
		{
			get
			{
				return this._ClosedAccount;
			}
			set
			{
				if ((this._ClosedAccount != value))
				{
					this.OnClosedAccountChanging(value);
					this.SendPropertyChanging();
					this._ClosedAccount = value;
					this.SendPropertyChanged("ClosedAccount");
					this.OnClosedAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosingDate
		{
			get
			{
				return this._ClosingDate;
			}
			set
			{
				if ((this._ClosingDate != value))
				{
					this.OnClosingDateChanging(value);
					this.SendPropertyChanging();
					this._ClosingDate = value;
					this.SendPropertyChanged("ClosingDate");
					this.OnClosingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="VarChar(10)")]
		public string Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCreditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreditDate
		{
			get
			{
				return this._LastCreditDate;
			}
			set
			{
				if ((this._LastCreditDate != value))
				{
					this.OnLastCreditDateChanging(value);
					this.SendPropertyChanging();
					this._LastCreditDate = value;
					this.SendPropertyChanged("LastCreditDate");
					this.OnLastCreditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextDueDate
		{
			get
			{
				return this._NextDueDate;
			}
			set
			{
				if ((this._NextDueDate != value))
				{
					this.OnNextDueDateChanging(value);
					this.SendPropertyChanging();
					this._NextDueDate = value;
					this.SendPropertyChanged("NextDueDate");
					this.OnNextDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityAmount", DbType="VarChar(10)")]
		public string MaturityAmount
		{
			get
			{
				return this._MaturityAmount;
			}
			set
			{
				if ((this._MaturityAmount != value))
				{
					this.OnMaturityAmountChanging(value);
					this.SendPropertyChanging();
					this._MaturityAmount = value;
					this.SendPropertyChanged("MaturityAmount");
					this.OnMaturityAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecurringDepositCustomer_RDRegister", Storage="_RDRegisters", ThisKey="RDAccountNo", OtherKey="RDAccountNo")]
		public EntitySet<RDRegister> RDRegisters
		{
			get
			{
				return this._RDRegisters;
			}
			set
			{
				this._RDRegisters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecurringDepositCustomer_RebetRDEntryDue", Storage="_RebetRDEntryDues", ThisKey="RDAccountNo", OtherKey="RDAccountNo")]
		public EntitySet<RebetRDEntryDue> RebetRDEntryDues
		{
			get
			{
				return this._RebetRDEntryDues;
			}
			set
			{
				this._RebetRDEntryDues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RDRegisters(RDRegister entity)
		{
			this.SendPropertyChanging();
			entity.RecurringDepositCustomer = this;
		}
		
		private void detach_RDRegisters(RDRegister entity)
		{
			this.SendPropertyChanging();
			entity.RecurringDepositCustomer = null;
		}
		
		private void attach_RebetRDEntryDues(RebetRDEntryDue entity)
		{
			this.SendPropertyChanging();
			entity.RecurringDepositCustomer = this;
		}
		
		private void detach_RebetRDEntryDues(RebetRDEntryDue entity)
		{
			this.SendPropertyChanging();
			entity.RecurringDepositCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchemeRegister")]
	public partial class SchemeRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _TypeOfInvestment;
		
		private System.DateTime _FromDate;
		
		private System.DateTime _ToDate;
		
		private string _Amount;
		
		private string _InterestWithAmount;
		
		private int _Year;
		
		private int _Month;
		
		private int _Day;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeOfInvestmentChanging(int value);
    partial void OnTypeOfInvestmentChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.DateTime value);
    partial void OnToDateChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnInterestWithAmountChanging(string value);
    partial void OnInterestWithAmountChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    #endregion
		
		public SchemeRegister()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfInvestment", DbType="Int NOT NULL")]
		public int TypeOfInvestment
		{
			get
			{
				return this._TypeOfInvestment;
			}
			set
			{
				if ((this._TypeOfInvestment != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeOfInvestmentChanging(value);
					this.SendPropertyChanging();
					this._TypeOfInvestment = value;
					this.SendPropertyChanged("TypeOfInvestment");
					this.OnTypeOfInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime NOT NULL")]
		public System.DateTime ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestWithAmount", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string InterestWithAmount
		{
			get
			{
				return this._InterestWithAmount;
			}
			set
			{
				if ((this._InterestWithAmount != value))
				{
					this.OnInterestWithAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestWithAmount = value;
					this.SendPropertyChanged("InterestWithAmount");
					this.OnInterestWithAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheme_SchemeRegister", Storage="_Scheme", ThisKey="TypeOfInvestment", OtherKey="SchemeNo", IsForeignKey=true)]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.SchemeRegisters.Remove(this);
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.SchemeRegisters.Add(this);
						this._TypeOfInvestment = value.SchemeNo;
					}
					else
					{
						this._TypeOfInvestment = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
